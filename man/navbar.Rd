% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/divTabContent.R, R/navbar.R
\name{divTabContent}
\alias{divTabContent}
\alias{divTabPane}
\alias{navbar}
\alias{navbarHeader}
\alias{navbarBrand}
\alias{navbarForm}
\alias{nav}
\alias{navbarText}
\alias{navbarButton}
\alias{navbarNav}
\alias{navTab}
\alias{navbarCollapse}
\alias{navbarCollapseButton}
\title{Navbar}
\usage{
divTabContent(...)

divTabPane(id, ..., active = FALSE)

navbar(..., position = c("static-top", "fixed-top", "static-bottom",
  "static-top"), inverse = FALSE, fluid = TRUE)

navbarHeader(..., pull = c("left", "right"))

navbarBrand(id, title = id)

navbarForm(..., pull = c("left", "right"))

nav(..., pull = c("left", "right"))

navbarText(title, pull = c("left", "right"))

navbarButton(id, title = id)

navbarNav(..., pull = c("left", "right"))

navTab(id, title = id, ..., active = FALSE)

navbarCollapse(...)

navbarCollapseButton()
}
\arguments{
\item{...}{HTML elements to include.}

\item{id}{Id of element. Can be accessed via \code{input$id} in server.}

\item{active}{Set to \code{TRUE} to add \code{active} class to tab.}

\item{position}{Determines whether the navbar should be displayed at the top
of the page with normal scrolling behavior ("static-top"),
pinned at the top ("fixed-top"),
or pinned at the bottom ("fixed-bottom").}

\item{inverse}{\code{TRUE} to use a dark background and light text for the
navigation bar}

\item{fluid}{\code{TRUE} to use a fluid layout. \code{FALSE} to use a fixed
layout.}

\item{pull}{Alignment of element, left or right?}

\item{title}{Title to show.}
}
\description{
Like \code{\link[shiny:navbarPage]{shiny::navbarPage()}} but with more flexibility. Elements can be aligned
to the right, buttons, text and other inputs included.
}
\details{
Specify the same \code{id} in a \code{navTab} and a \code{divTabPane} match
navigation and content.
}
\examples{
if (interactive()) {
 library(shiny)

 ui <- bootstrapPage(
   tags$head(tags$style(".navbar-brand {padding: 0 0 !important}")),
   navbar(position = "static-top",
          ## use image as brand
          navbarHeader(navbarBrand("Brand", tags$img(src = "logo.png", height = 70))),
          ## these elements appear on the right
          navbarHeader(navbarButton("Logout"),
                       navbarCollapseButton(),
                       pull = "right"),
          ## the classical navbar with a text form
          navbarCollapse(navbarNav(navTab("Tab1"),
                                   navTab("Tab2"),
                                   navTab("Tab3")),
                         navbarForm(textInputNoLabel("text")))
   ),
   div(
     class = "container-fluid",
     divTabContent(
       divTabPane("Tab1", h2("This is tab1")),
       divTabPane("Tab2", h2("This is tab2")),
       divTabPane("Tab3", h2("This is tab3"))
     )
   )
 )

 server <- function(input, output, session) {
   session$onSessionEnded(stopApp)

   observeEvent(input$navbar, {
     print(input$navbar)
   })

   observeEvent(input$Logout, {
     print("Logged out")
   })

   # clicked on brand image
   observeEvent(input$Brand, {
     print("Brand")
   })
 }

 shinyApp(ui, server)

}
}
